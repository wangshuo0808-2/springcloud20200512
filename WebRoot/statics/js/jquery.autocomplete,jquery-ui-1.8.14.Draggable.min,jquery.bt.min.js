;(function($){$.fn.extend({autocomplete:function(urlOrData,options){var isUrl=typeof urlOrData=="string";options=$.extend({},$.Autocompleter.defaults,{url:isUrl?urlOrData:null,data:isUrl?null:urlOrData,delay:isUrl?$.Autocompleter.defaults.delay:10,max:options&&!options.scroll?10:150},options);options.highlight=options.highlight||function(value){return value;};options.formatMatch=options.formatMatch||options.formatItem;return this.each(function(){new $.Autocompleter(this,options);});},result:function(handler){return this.bind("result",handler);},search:function(handler){return this.trigger("search",[handler]);},flushCache:function(){return this.trigger("flushCache");},setOptions:function(options){return this.trigger("setOptions",[options]);},unautocomplete:function(){return this.trigger("unautocomplete");}});$.Autocompleter=function(input,options){var KEY={UP:38,DOWN:40,DEL:46,TAB:9,RETURN:13,ESC:27,COMMA:188,PAGEUP:33,PAGEDOWN:34,BACKSPACE:8};var $input=$(input).attr("autocomplete","off").addClass(options.inputClass);var timeout;var previousValue="";var cache=$.Autocompleter.Cache(options);var hasFocus=0;var lastKeyPressCode;var config={mouseDownOnSelect:false};var select=$.Autocompleter.Select(options,input,selectCurrent,config);var blockSubmit;$.browser.opera&&$(input.form).bind("submit.autocomplete",function(){if(blockSubmit){blockSubmit=false;return false;}});$input.bind(($.browser.opera?"keypress":"keydown")+".autocomplete",function(event){hasFocus=1;lastKeyPressCode=event.keyCode;switch(event.keyCode){case KEY.UP:if(select.visible()){event.preventDefault();select.prev();}else{onChange(0,true);}
break;case KEY.DOWN:if(select.visible()){event.preventDefault();select.next();}else{onChange(0,true);}
break;case KEY.PAGEUP:if(select.visible()){event.preventDefault();select.pageUp();}else{onChange(0,true);}
break;case KEY.PAGEDOWN:if(select.visible()){event.preventDefault();select.pageDown();}else{onChange(0,true);}
break;case options.multiple&&$.trim(options.multipleSeparator)==","&&KEY.COMMA:case KEY.TAB:case KEY.RETURN:if(selectCurrent()){event.preventDefault();blockSubmit=true;return false;}
break;case KEY.ESC:select.hide();break;default:clearTimeout(timeout);timeout=setTimeout(onChange,options.delay);break;}}).focus(function(){hasFocus++;}).blur(function(){hasFocus=0;if(!config.mouseDownOnSelect){hideResults();}}).click(function(){if(options.clickFire){if(!select.visible()){onChange(0,true);}}else{if(hasFocus++>1&&!select.visible()){onChange(0,true);}}}).bind("search",function(){var fn=(arguments.length>1)?arguments[1]:null;function findValueCallback(q,data){var result;if(data&&data.length){for(var i=0;i<data.length;i++){if(data[i].result.toLowerCase()==q.toLowerCase()){result=data[i];break;}}}
if(typeof fn=="function")fn(result);else $input.trigger("result",result&&[result.data,result.value]);}
$.each(trimWords($input.val()),function(i,value){request(value,findValueCallback,findValueCallback);});}).bind("flushCache",function(){cache.flush();}).bind("setOptions",function(){$.extend(true,options,arguments[1]);if("data"in arguments[1])
cache.populate();}).bind("unautocomplete",function(){select.unbind();$input.unbind();$(input.form).unbind(".autocomplete");}).bind("input",function(){onChange(0,true);});;function selectCurrent(){var selected=select.selected();if(!selected)
return false;var v=selected.result;previousValue=v;if(options.multiple){var words=trimWords($input.val());if(words.length>1){var seperator=options.multipleSeparator.length;var cursorAt=$(input).selection().start;var wordAt,progress=0;$.each(words,function(i,word){progress+=word.length;if(cursorAt<=progress){wordAt=i;return false;}
progress+=seperator;});words[wordAt]=v;v=words.join(options.multipleSeparator);}
v+=options.multipleSeparator;}
$input.val(v);hideResultsNow();$input.trigger("result",[selected.data,selected.value]);return true;}
function onChange(crap,skipPrevCheck){if(lastKeyPressCode==KEY.DEL){select.hide();return;}
var currentValue=$input.val();if(!skipPrevCheck&&currentValue==previousValue)
return;previousValue=currentValue;currentValue=lastWord(currentValue);if(currentValue.length>=options.minChars){$input.addClass(options.loadingClass);if(!options.matchCase)
currentValue=currentValue.toLowerCase();request(currentValue,receiveData,hideResultsNow);}else{stopLoading();select.hide();}};function trimWords(value){if(!value)
return[""];if(!options.multiple)
return[$.trim(value)];return $.map(value.split(options.multipleSeparator),function(word){return $.trim(value).length?$.trim(word):null;});}
function lastWord(value){if(options.formatValue){value=options.formatValue(value);}
if(!options.multiple)
return value;var words=trimWords(value);if(words.length==1)
return words[0];var cursorAt=$(input).selection().start;if(cursorAt==value.length){words=trimWords(value)}else{words=trimWords(value.replace(value.substring(cursorAt),""));}
return words[words.length-1];}
function autoFill(q,sValue){if(options.autoFill&&(lastWord($input.val()).toLowerCase()==q.toLowerCase())&&lastKeyPressCode!=KEY.BACKSPACE){$input.val($input.val()+sValue.substring(lastWord(previousValue).length));$(input).selection(previousValue.length,previousValue.length+sValue.length);}};function hideResults(){clearTimeout(timeout);timeout=setTimeout(hideResultsNow,200);};function hideResultsNow(){var wasVisible=select.visible();select.hide();clearTimeout(timeout);stopLoading();if(options.mustMatch){$input.search(function(result){if(!result){if(options.multiple){var words=trimWords($input.val()).slice(0,-1);$input.val(words.join(options.multipleSeparator)+(words.length?options.multipleSeparator:""));}
else{$input.val("");$input.trigger("result",null);}}});}};function receiveData(q,data){if(data&&data.length&&hasFocus){stopLoading();select.display(data,q);autoFill(q,data[0].value);select.show();}else{hideResultsNow();}};function request(term,success,failure){if(!options.matchCase)
term=term.toLowerCase();var data=cache.load(term);if(data&&data.length){success(term,data);}else if((typeof options.url=="string")&&(options.url.length>0)){var extraParams={timestamp:+new Date()};$.each(options.extraParams,function(key,param){extraParams[key]=typeof param=="function"?param():param;});$.ajax({mode:"abort",port:"autocomplete"+input.name,dataType:options.dataType,url:options.url,data:$.extend({q:lastWord(term),limit:options.max},extraParams),success:function(data){var parsed=options.parse&&options.parse(data)||parse(data);cache.add(term,parsed);success(term,parsed);}});}else{select.emptyList();failure(term);}};function parse(data){var parsed=[];var rows=data.split("\n");for(var i=0;i<rows.length;i++){var row=$.trim(rows[i]);if(row){row=row.split("|");parsed[parsed.length]={data:row,value:row[0],result:options.formatResult&&options.formatResult(row,row[0])||row[0]};}}
return parsed;};function stopLoading(){$input.removeClass(options.loadingClass);};};$.Autocompleter.defaults={inputClass:"ac_input",resultsClass:"ac_results",loadingClass:"ac_loading",minChars:1,delay:400,matchCase:false,matchSubset:true,matchContains:false,cacheLength:100,max:1000,mustMatch:false,extraParams:{},selectFirst:true,formatItem:function(row){return row[0];},formatMatch:null,autoFill:false,width:0,multiple:false,multipleSeparator:" ",inputFocus:true,clickFire:false,highlight:function(value,term){return value.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)("+term.replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi,"\\$1")+")(?![^<>]*>)(?![^&;]+;)","gi"),"<strong>$1</strong>");},scroll:true,scrollHeight:180};$.Autocompleter.Cache=function(options){var data={};var length=0;function matchSubset(s,sub){if(typeof s!='string'){return false;}
if(!options.matchCase)
s=s.toLowerCase();var i=s.indexOf(sub);if(options.matchContains=="word"){i=s.toLowerCase().search("\\b"+sub.toLowerCase());}
if(i==-1)return false;return i==0||options.matchContains;};function add(q,value){if(length>options.cacheLength){flush();}
if(!data[q]){length++;}
data[q]=value;}
function populate(){if(!options.data)return false;var stMatchSets={},nullData=0;if(!options.url)options.cacheLength=1;stMatchSets[""]=[];for(var i=0,ol=options.data.length;i<ol;i++){var rawValue=options.data[i];rawValue=(typeof rawValue=="string")?[rawValue]:rawValue;var value=options.formatMatch(rawValue,i+1,options.data.length);if(value===false)
continue;var firstChar=value.charAt(0).toLowerCase();if(!stMatchSets[firstChar])
stMatchSets[firstChar]=[];var row={value:value,data:rawValue,result:options.formatResult&&options.formatResult(rawValue)||value};stMatchSets[firstChar].push(row);if(nullData++<options.max){stMatchSets[""].push(row);}};$.each(stMatchSets,function(i,value){options.cacheLength++;add(i,value);});}
setTimeout(populate,25);function flush(){data={};length=0;}
return{flush:flush,add:add,populate:populate,load:function(q){if(!options.cacheLength||!length)
return null;if(!options.url&&options.matchContains){var csub=[];for(var k in data){if(k.length>0){var c=data[k];$.each(c,function(i,x){if(matchSubset(x.value,q)){csub.push(x);}});}}
return csub;}else
if(data[q]){return data[q];}else
if(options.matchSubset){for(var i=q.length-1;i>=options.minChars;i--){var c=data[q.substr(0,i)];if(c){var csub=[];$.each(c,function(i,x){if(matchSubset(x.value,q)){csub[csub.length]=x;}});return csub;}}}
return null;}};};$.Autocompleter.Select=function(options,input,select,config){var CLASSES={ACTIVE:"ac_over"};var listItems,active=-1,data,term="",needsInit=true,element,list;function init(){if(!needsInit)
return;element=$("<div/>").hide().addClass(options.resultsClass).css("position","absolute").appendTo(document.body).hover(function(event){if($(this).is(":visible")){input.focus();}
config.mouseDownOnSelect=false;});list=$("<ul/>").appendTo(element).mouseover(function(event){if(target(event).nodeName&&target(event).nodeName.toUpperCase()=='LI'){active=$("li",list).removeClass(CLASSES.ACTIVE).index(target(event));$(target(event)).addClass(CLASSES.ACTIVE);}}).click(function(event){$(target(event)).addClass(CLASSES.ACTIVE);select();if(options.inputFocus)
input.focus();return false;}).mousedown(function(){config.mouseDownOnSelect=true;}).mouseup(function(){config.mouseDownOnSelect=false;});if(options.width>0)
element.css("width",options.width);needsInit=false;}
function target(event){var element=event.target;while(element&&element.tagName!="LI")
element=element.parentNode;if(!element)
return[];return element;}
function moveSelect(step){listItems.slice(active,active+1).removeClass(CLASSES.ACTIVE);movePosition(step);var activeItem=listItems.slice(active,active+1).addClass(CLASSES.ACTIVE);if(options.scroll){var offset=0;listItems.slice(0,active).each(function(){offset+=this.offsetHeight;});if((offset+activeItem[0].offsetHeight-list.scrollTop())>list[0].clientHeight){list.scrollTop(offset+activeItem[0].offsetHeight-list.innerHeight());}else if(offset<list.scrollTop()){list.scrollTop(offset);}}};function movePosition(step){active+=step;if(active<0){active=listItems.size()-1;}else if(active>=listItems.size()){active=0;}}
function limitNumberOfItems(available){return options.max&&options.max<available?options.max:available;}
function fillList(){list.empty();var max=limitNumberOfItems(data.length);for(var i=0;i<max;i++){if(!data[i])
continue;var formatted=options.formatItem(data[i].data,i+1,max,data[i].value,term);if(formatted===false)
continue;var li=$("<li/>").html(options.highlight(formatted,term)).addClass(i%2==0?"ac_even":"ac_odd").appendTo(list)[0];$.data(li,"ac_data",data[i]);}
listItems=list.find("li");if(options.selectFirst){listItems.slice(0,1).addClass(CLASSES.ACTIVE);active=0;}
if($.fn.bgiframe)
list.bgiframe();}
return{display:function(d,q){init();data=d;term=q;fillList();},next:function(){moveSelect(1);},prev:function(){moveSelect(-1);},pageUp:function(){if(active!=0&&active-8<0){moveSelect(-active);}else{moveSelect(-8);}},pageDown:function(){if(active!=listItems.size()-1&&active+8>listItems.size()){moveSelect(listItems.size()-1-active);}else{moveSelect(8);}},hide:function(){element&&element.hide();listItems&&listItems.removeClass(CLASSES.ACTIVE);active=-1;},visible:function(){return element&&element.is(":visible");},current:function(){return this.visible()&&(listItems.filter("."+CLASSES.ACTIVE)[0]||options.selectFirst&&listItems[0]);},show:function(){var offset=$(input).offset();element.css({width:typeof options.width=="string"||options.width>0?options.width:$(input).width(),top:offset.top+input.offsetHeight,left:offset.left}).show();if(options.scroll){list.scrollTop(0);list.css({maxHeight:options.scrollHeight,overflow:'auto'});if($.browser.msie&&typeof document.body.style.maxHeight==="undefined"){var listHeight=0;listItems.each(function(){listHeight+=this.offsetHeight;});var scrollbarsVisible=listHeight>options.scrollHeight;list.css('height',scrollbarsVisible?options.scrollHeight:listHeight);if(!scrollbarsVisible){listItems.width(list.width()-parseInt(listItems.css("padding-left"))-parseInt(listItems.css("padding-right")));}}}},selected:function(){var selected=listItems&&listItems.filter("."+CLASSES.ACTIVE).removeClass(CLASSES.ACTIVE);return selected&&selected.length&&$.data(selected[0],"ac_data");},emptyList:function(){list&&list.empty();},unbind:function(){element&&element.remove();}};};$.fn.selection=function(start,end){if(start!==undefined){return this.each(function(){if(this.createTextRange){var selRange=this.createTextRange();if(end===undefined||start==end){selRange.move("character",start);selRange.select();}else{selRange.collapse(true);selRange.moveStart("character",start);selRange.moveEnd("character",end);selRange.select();}}else if(this.setSelectionRange){this.setSelectionRange(start,end);}else if(this.selectionStart){this.selectionStart=start;this.selectionEnd=end;}});}
var field=this[0];if(field.createTextRange){var range=document.selection.createRange(),orig=field.value,teststring="<->",textLength=range.text.length;range.text=teststring;var caretAt=field.value.indexOf(teststring);field.value=orig;this.selection(caretAt,caretAt+textLength);return{start:caretAt,end:caretAt+textLength}}else if(field.selectionStart!==undefined){return{start:field.selectionStart,end:field.selectionEnd}}};})(jQuery);
;/*!
 * jQuery UI 1.8.14
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI
 */
(function(c,j){function k(a,b){var d=a.nodeName.toLowerCase();if("area"===d){b=a.parentNode;d=b.name;if(!a.href||!d||b.nodeName.toLowerCase()!=="map")return false;a=c("img[usemap=#"+d+"]")[0];return!!a&&l(a)}return(/input|select|textarea|button|object/.test(d)?!a.disabled:"a"==d?a.href||b:b)&&l(a)}function l(a){return!c(a).parents().andSelf().filter(function(){return c.curCSS(this,"visibility")==="hidden"||c.expr.filters.hidden(this)}).length}c.ui=c.ui||{};if(!c.ui.version){c.extend(c.ui,{version:"1.8.14",
keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}});c.fn.extend({_focus:c.fn.focus,focus:function(a,b){return typeof a==="number"?this.each(function(){var d=this;setTimeout(function(){c(d).focus();
b&&b.call(d)},a)}):this._focus.apply(this,arguments)},scrollParent:function(){var a;a=c.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(c.curCSS(this,"position",1))&&/(auto|scroll)/.test(c.curCSS(this,"overflow",1)+c.curCSS(this,"overflow-y",1)+c.curCSS(this,"overflow-x",1))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(c.curCSS(this,"overflow",1)+c.curCSS(this,
"overflow-y",1)+c.curCSS(this,"overflow-x",1))}).eq(0);return/fixed/.test(this.css("position"))||!a.length?c(document):a},zIndex:function(a){if(a!==j)return this.css("zIndex",a);if(this.length){a=c(this[0]);for(var b;a.length&&a[0]!==document;){b=a.css("position");if(b==="absolute"||b==="relative"||b==="fixed"){b=parseInt(a.css("zIndex"),10);if(!isNaN(b)&&b!==0)return b}a=a.parent()}}return 0},disableSelection:function(){return this.bind((c.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",
function(a){a.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}});c.each(["Width","Height"],function(a,b){function d(f,g,m,n){c.each(e,function(){g-=parseFloat(c.curCSS(f,"padding"+this,true))||0;if(m)g-=parseFloat(c.curCSS(f,"border"+this+"Width",true))||0;if(n)g-=parseFloat(c.curCSS(f,"margin"+this,true))||0});return g}var e=b==="Width"?["Left","Right"]:["Top","Bottom"],h=b.toLowerCase(),i={innerWidth:c.fn.innerWidth,innerHeight:c.fn.innerHeight,outerWidth:c.fn.outerWidth,
outerHeight:c.fn.outerHeight};c.fn["inner"+b]=function(f){if(f===j)return i["inner"+b].call(this);return this.each(function(){c(this).css(h,d(this,f)+"px")})};c.fn["outer"+b]=function(f,g){if(typeof f!=="number")return i["outer"+b].call(this,f);return this.each(function(){c(this).css(h,d(this,f,true,g)+"px")})}});c.extend(c.expr[":"],{data:function(a,b,d){return!!c.data(a,d[3])},focusable:function(a){return k(a,!isNaN(c.attr(a,"tabindex")))},tabbable:function(a){var b=c.attr(a,"tabindex"),d=isNaN(b);
return(d||b>=0)&&k(a,!d)}});c(function(){var a=document.body,b=a.appendChild(b=document.createElement("div"));c.extend(b.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0});c.support.minHeight=b.offsetHeight===100;c.support.selectstart="onselectstart"in b;a.removeChild(b).style.display="none"});c.extend(c.ui,{plugin:{add:function(a,b,d){a=c.ui[a].prototype;for(var e in d){a.plugins[e]=a.plugins[e]||[];a.plugins[e].push([b,d[e]])}},call:function(a,b,d){if((b=a.plugins[b])&&a.element[0].parentNode)for(var e=
0;e<b.length;e++)a.options[b[e][0]]&&b[e][1].apply(a.element,d)}},contains:function(a,b){return document.compareDocumentPosition?a.compareDocumentPosition(b)&16:a!==b&&a.contains(b)},hasScroll:function(a,b){if(c(a).css("overflow")==="hidden")return false;b=b&&b==="left"?"scrollLeft":"scrollTop";var d=false;if(a[b]>0)return true;a[b]=1;d=a[b]>0;a[b]=0;return d},isOverAxis:function(a,b,d){return a>b&&a<b+d},isOver:function(a,b,d,e,h,i){return c.ui.isOverAxis(a,d,h)&&c.ui.isOverAxis(b,e,i)}})}})(jQuery);
;/*!
 * jQuery UI Widget 1.8.14
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Widget
 */
(function(b,j){if(b.cleanData){var k=b.cleanData;b.cleanData=function(a){for(var c=0,d;(d=a[c])!=null;c++)b(d).triggerHandler("remove");k(a)}}else{var l=b.fn.remove;b.fn.remove=function(a,c){return this.each(function(){if(!c)if(!a||b.filter(a,[this]).length)b("*",this).add([this]).each(function(){b(this).triggerHandler("remove")});return l.call(b(this),a,c)})}}b.widget=function(a,c,d){var e=a.split(".")[0],f;a=a.split(".")[1];f=e+"-"+a;if(!d){d=c;c=b.Widget}b.expr[":"][f]=function(h){return!!b.data(h,
a)};b[e]=b[e]||{};b[e][a]=function(h,g){arguments.length&&this._createWidget(h,g)};c=new c;c.options=b.extend(true,{},c.options);b[e][a].prototype=b.extend(true,c,{namespace:e,widgetName:a,widgetEventPrefix:b[e][a].prototype.widgetEventPrefix||a,widgetBaseClass:f},d);b.widget.bridge(a,b[e][a])};b.widget.bridge=function(a,c){b.fn[a]=function(d){var e=typeof d==="string",f=Array.prototype.slice.call(arguments,1),h=this;d=!e&&f.length?b.extend.apply(null,[true,d].concat(f)):d;if(e&&d.charAt(0)==="_")return h;
e?this.each(function(){var g=b.data(this,a),i=g&&b.isFunction(g[d])?g[d].apply(g,f):g;if(i!==g&&i!==j){h=i;return false}}):this.each(function(){var g=b.data(this,a);g?g.option(d||{})._init():b.data(this,a,new c(d,this))});return h}};b.Widget=function(a,c){arguments.length&&this._createWidget(a,c)};b.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:false},_createWidget:function(a,c){b.data(c,this.widgetName,this);this.element=b(c);this.options=b.extend(true,{},this.options,
this._getCreateOptions(),a);var d=this;this.element.bind("remove."+this.widgetName,function(){d.destroy()});this._create();this._trigger("create");this._init()},_getCreateOptions:function(){return b.metadata&&b.metadata.get(this.element[0])[this.widgetName]},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName);this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+"-disabled ui-state-disabled")},
widget:function(){return this.element},option:function(a,c){var d=a;if(arguments.length===0)return b.extend({},this.options);if(typeof a==="string"){if(c===j)return this.options[a];d={};d[a]=c}this._setOptions(d);return this},_setOptions:function(a){var c=this;b.each(a,function(d,e){c._setOption(d,e)});return this},_setOption:function(a,c){this.options[a]=c;if(a==="disabled")this.widget()[c?"addClass":"removeClass"](this.widgetBaseClass+"-disabled ui-state-disabled").attr("aria-disabled",c);return this},
enable:function(){return this._setOption("disabled",false)},disable:function(){return this._setOption("disabled",true)},_trigger:function(a,c,d){var e=this.options[a];c=b.Event(c);c.type=(a===this.widgetEventPrefix?a:this.widgetEventPrefix+a).toLowerCase();d=d||{};if(c.originalEvent){a=b.event.props.length;for(var f;a;){f=b.event.props[--a];c[f]=c.originalEvent[f]}}this.element.trigger(c,d);return!(b.isFunction(e)&&e.call(this.element[0],c,d)===false||c.isDefaultPrevented())}}})(jQuery);
;/*!
 * jQuery UI Mouse 1.8.14
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Mouse
 *
 * Depends:
 *	jquery.ui.widget.js
 */
(function(b){var d=false;b(document).mousedown(function(){d=false});b.widget("ui.mouse",{options:{cancel:":input,option",distance:1,delay:0},_mouseInit:function(){var a=this;this.element.bind("mousedown."+this.widgetName,function(c){return a._mouseDown(c)}).bind("click."+this.widgetName,function(c){if(true===b.data(c.target,a.widgetName+".preventClickEvent")){b.removeData(c.target,a.widgetName+".preventClickEvent");c.stopImmediatePropagation();return false}});this.started=false},_mouseDestroy:function(){this.element.unbind("."+
this.widgetName)},_mouseDown:function(a){if(!d){this._mouseStarted&&this._mouseUp(a);this._mouseDownEvent=a;var c=this,f=a.which==1,g=typeof this.options.cancel=="string"?b(a.target).closest(this.options.cancel).length:false;if(!f||g||!this._mouseCapture(a))return true;this.mouseDelayMet=!this.options.delay;if(!this.mouseDelayMet)this._mouseDelayTimer=setTimeout(function(){c.mouseDelayMet=true},this.options.delay);if(this._mouseDistanceMet(a)&&this._mouseDelayMet(a)){this._mouseStarted=this._mouseStart(a)!==
false;if(!this._mouseStarted){a.preventDefault();return true}}true===b.data(a.target,this.widgetName+".preventClickEvent")&&b.removeData(a.target,this.widgetName+".preventClickEvent");this._mouseMoveDelegate=function(e){return c._mouseMove(e)};this._mouseUpDelegate=function(e){return c._mouseUp(e)};b(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate);a.preventDefault();return d=true}},_mouseMove:function(a){if(b.browser.msie&&
!(document.documentMode>=9)&&!a.button)return this._mouseUp(a);if(this._mouseStarted){this._mouseDrag(a);return a.preventDefault()}if(this._mouseDistanceMet(a)&&this._mouseDelayMet(a))(this._mouseStarted=this._mouseStart(this._mouseDownEvent,a)!==false)?this._mouseDrag(a):this._mouseUp(a);return!this._mouseStarted},_mouseUp:function(a){b(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate);if(this._mouseStarted){this._mouseStarted=
false;a.target==this._mouseDownEvent.target&&b.data(a.target,this.widgetName+".preventClickEvent",true);this._mouseStop(a)}return false},_mouseDistanceMet:function(a){return Math.max(Math.abs(this._mouseDownEvent.pageX-a.pageX),Math.abs(this._mouseDownEvent.pageY-a.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return true}})})(jQuery);
;/*
 * jQuery UI Draggable 1.8.14
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Draggables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(d){d.widget("ui.draggable",d.ui.mouse,{widgetEventPrefix:"drag",options:{addClasses:true,appendTo:"parent",axis:false,connectToSortable:false,containment:false,cursor:"auto",cursorAt:false,grid:false,handle:false,helper:"original",iframeFix:false,opacity:false,refreshPositions:false,revert:false,revertDuration:500,scope:"default",scroll:true,scrollSensitivity:20,scrollSpeed:20,snap:false,snapMode:"both",snapTolerance:20,stack:false,zIndex:false},_create:function(){if(this.options.helper==
"original"&&!/^(?:r|a|f)/.test(this.element.css("position")))this.element[0].style.position="relative";this.options.addClasses&&this.element.addClass("ui-draggable");this.options.disabled&&this.element.addClass("ui-draggable-disabled");this._mouseInit()},destroy:function(){if(this.element.data("draggable")){this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");this._mouseDestroy();return this}},_mouseCapture:function(a){var b=
this.options;if(this.helper||b.disabled||d(a.target).is(".ui-resizable-handle"))return false;this.handle=this._getHandle(a);if(!this.handle)return false;d(b.iframeFix===true?"iframe":b.iframeFix).each(function(){d('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1E3}).css(d(this).offset()).appendTo("body")});return true},_mouseStart:function(a){var b=this.options;this.helper=
this._createHelper(a);this._cacheHelperProportions();if(d.ui.ddmanager)d.ui.ddmanager.current=this;this._cacheMargins();this.cssPosition=this.helper.css("position");this.scrollParent=this.helper.scrollParent();this.offset=this.positionAbs=this.element.offset();this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left};d.extend(this.offset,{click:{left:a.pageX-this.offset.left,top:a.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});
this.originalPosition=this.position=this._generatePosition(a);this.originalPageX=a.pageX;this.originalPageY=a.pageY;b.cursorAt&&this._adjustOffsetFromHelper(b.cursorAt);b.containment&&this._setContainment();if(this._trigger("start",a)===false){this._clear();return false}this._cacheHelperProportions();d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,a);this.helper.addClass("ui-draggable-dragging");this._mouseDrag(a,true);d.ui.ddmanager&&d.ui.ddmanager.dragStart(this,a);return true},
_mouseDrag:function(a,b){this.position=this._generatePosition(a);this.positionAbs=this._convertPositionTo("absolute");if(!b){b=this._uiHash();if(this._trigger("drag",a,b)===false){this._mouseUp({});return false}this.position=b.position}if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";d.ui.ddmanager&&d.ui.ddmanager.drag(this,a);return false},_mouseStop:function(a){var b=
false;if(d.ui.ddmanager&&!this.options.dropBehaviour)b=d.ui.ddmanager.drop(this,a);if(this.dropped){b=this.dropped;this.dropped=false}if((!this.element[0]||!this.element[0].parentNode)&&this.options.helper=="original")return false;if(this.options.revert=="invalid"&&!b||this.options.revert=="valid"&&b||this.options.revert===true||d.isFunction(this.options.revert)&&this.options.revert.call(this.element,b)){var c=this;d(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,
10),function(){c._trigger("stop",a)!==false&&c._clear()})}else this._trigger("stop",a)!==false&&this._clear();return false},_mouseUp:function(a){this.options.iframeFix===true&&d("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)});d.ui.ddmanager&&d.ui.ddmanager.dragStop(this,a);return d.ui.mouse.prototype._mouseUp.call(this,a)},cancel:function(){this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear();return this},_getHandle:function(a){var b=!this.options.handle||
!d(this.options.handle,this.element).length?true:false;d(this.options.handle,this.element).find("*").andSelf().each(function(){if(this==a.target)b=true});return b},_createHelper:function(a){var b=this.options;a=d.isFunction(b.helper)?d(b.helper.apply(this.element[0],[a])):b.helper=="clone"?this.element.clone().removeAttr("id"):this.element;a.parents("body").length||a.appendTo(b.appendTo=="parent"?this.element[0].parentNode:b.appendTo);a[0]!=this.element[0]&&!/(fixed|absolute)/.test(a.css("position"))&&
a.css("position","absolute");return a},_adjustOffsetFromHelper:function(a){if(typeof a=="string")a=a.split(" ");if(d.isArray(a))a={left:+a[0],top:+a[1]||0};if("left"in a)this.offset.click.left=a.left+this.margins.left;if("right"in a)this.offset.click.left=this.helperProportions.width-a.right+this.margins.left;if("top"in a)this.offset.click.top=a.top+this.margins.top;if("bottom"in a)this.offset.click.top=this.helperProportions.height-a.bottom+this.margins.top},_getParentOffset:function(){this.offsetParent=
this.helper.offsetParent();var a=this.offsetParent.offset();if(this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0])){a.left+=this.scrollParent.scrollLeft();a.top+=this.scrollParent.scrollTop()}if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&d.browser.msie)a={top:0,left:0};return{top:a.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:a.left+(parseInt(this.offsetParent.css("borderLeftWidth"),
10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.element.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}else return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),
10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var a=this.options;if(a.containment=="parent")a.containment=this.helper[0].parentNode;if(a.containment=="document"||a.containment=="window")this.containment=[a.containment=="document"?0:d(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,a.containment=="document"?0:d(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,
(a.containment=="document"?0:d(window).scrollLeft())+d(a.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(a.containment=="document"?0:d(window).scrollTop())+(d(a.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(a.containment)&&a.containment.constructor!=Array){a=d(a.containment);var b=a[0];if(b){a.offset();var c=d(b).css("overflow")!=
"hidden";this.containment=[(parseInt(d(b).css("borderLeftWidth"),10)||0)+(parseInt(d(b).css("paddingLeft"),10)||0),(parseInt(d(b).css("borderTopWidth"),10)||0)+(parseInt(d(b).css("paddingTop"),10)||0),(c?Math.max(b.scrollWidth,b.offsetWidth):b.offsetWidth)-(parseInt(d(b).css("borderLeftWidth"),10)||0)-(parseInt(d(b).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(c?Math.max(b.scrollHeight,b.offsetHeight):b.offsetHeight)-(parseInt(d(b).css("borderTopWidth"),
10)||0)-(parseInt(d(b).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom];this.relative_container=a}}else if(a.containment.constructor==Array)this.containment=a.containment},_convertPositionTo:function(a,b){if(!b)b=this.position;a=a=="absolute"?1:-1;var c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,f=/(html|body)/i.test(c[0].tagName);return{top:b.top+
this.offset.relative.top*a+this.offset.parent.top*a-(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():f?0:c.scrollTop())*a),left:b.left+this.offset.relative.left*a+this.offset.parent.left*a-(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():f?0:c.scrollLeft())*a)}},_generatePosition:function(a){var b=this.options,c=this.cssPosition=="absolute"&&
!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,f=/(html|body)/i.test(c[0].tagName),e=a.pageX,h=a.pageY;if(this.originalPosition){var g;if(this.containment){if(this.relative_container){g=this.relative_container.offset();g=[this.containment[0]+g.left,this.containment[1]+g.top,this.containment[2]+g.left,this.containment[3]+g.top]}else g=this.containment;if(a.pageX-this.offset.click.left<g[0])e=g[0]+this.offset.click.left;
if(a.pageY-this.offset.click.top<g[1])h=g[1]+this.offset.click.top;if(a.pageX-this.offset.click.left>g[2])e=g[2]+this.offset.click.left;if(a.pageY-this.offset.click.top>g[3])h=g[3]+this.offset.click.top}if(b.grid){h=b.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/b.grid[1])*b.grid[1]:this.originalPageY;h=g?!(h-this.offset.click.top<g[1]||h-this.offset.click.top>g[3])?h:!(h-this.offset.click.top<g[1])?h-b.grid[1]:h+b.grid[1]:h;e=b.grid[0]?this.originalPageX+Math.round((e-this.originalPageX)/
b.grid[0])*b.grid[0]:this.originalPageX;e=g?!(e-this.offset.click.left<g[0]||e-this.offset.click.left>g[2])?e:!(e-this.offset.click.left<g[0])?e-b.grid[0]:e+b.grid[0]:e}}return{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():f?0:c.scrollTop()),left:e-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(d.browser.safari&&d.browser.version<
526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():f?0:c.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging");this.helper[0]!=this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove();this.helper=null;this.cancelHelperRemoval=false},_trigger:function(a,b,c){c=c||this._uiHash();d.ui.plugin.call(this,a,[b,c]);if(a=="drag")this.positionAbs=this._convertPositionTo("absolute");return d.Widget.prototype._trigger.call(this,a,b,
c)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}});d.extend(d.ui.draggable,{version:"1.8.14"});d.ui.plugin.add("draggable","connectToSortable",{start:function(a,b){var c=d(this).data("draggable"),f=c.options,e=d.extend({},b,{item:c.element});c.sortables=[];d(f.connectToSortable).each(function(){var h=d.data(this,"sortable");if(h&&!h.options.disabled){c.sortables.push({instance:h,shouldRevert:h.options.revert});
h.refreshPositions();h._trigger("activate",a,e)}})},stop:function(a,b){var c=d(this).data("draggable"),f=d.extend({},b,{item:c.element});d.each(c.sortables,function(){if(this.instance.isOver){this.instance.isOver=0;c.cancelHelperRemoval=true;this.instance.cancelHelperRemoval=false;if(this.shouldRevert)this.instance.options.revert=true;this.instance._mouseStop(a);this.instance.options.helper=this.instance.options._helper;c.options.helper=="original"&&this.instance.currentItem.css({top:"auto",left:"auto"})}else{this.instance.cancelHelperRemoval=
false;this.instance._trigger("deactivate",a,f)}})},drag:function(a,b){var c=d(this).data("draggable"),f=this;d.each(c.sortables,function(){this.instance.positionAbs=c.positionAbs;this.instance.helperProportions=c.helperProportions;this.instance.offset.click=c.offset.click;if(this.instance._intersectsWith(this.instance.containerCache)){if(!this.instance.isOver){this.instance.isOver=1;this.instance.currentItem=d(f).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",true);
this.instance.options._helper=this.instance.options.helper;this.instance.options.helper=function(){return b.helper[0]};a.target=this.instance.currentItem[0];this.instance._mouseCapture(a,true);this.instance._mouseStart(a,true,true);this.instance.offset.click.top=c.offset.click.top;this.instance.offset.click.left=c.offset.click.left;this.instance.offset.parent.left-=c.offset.parent.left-this.instance.offset.parent.left;this.instance.offset.parent.top-=c.offset.parent.top-this.instance.offset.parent.top;
c._trigger("toSortable",a);c.dropped=this.instance.element;c.currentItem=c.element;this.instance.fromOutside=c}this.instance.currentItem&&this.instance._mouseDrag(a)}else if(this.instance.isOver){this.instance.isOver=0;this.instance.cancelHelperRemoval=true;this.instance.options.revert=false;this.instance._trigger("out",a,this.instance._uiHash(this.instance));this.instance._mouseStop(a,true);this.instance.options.helper=this.instance.options._helper;this.instance.currentItem.remove();this.instance.placeholder&&
this.instance.placeholder.remove();c._trigger("fromSortable",a);c.dropped=false}})}});d.ui.plugin.add("draggable","cursor",{start:function(){var a=d("body"),b=d(this).data("draggable").options;if(a.css("cursor"))b._cursor=a.css("cursor");a.css("cursor",b.cursor)},stop:function(){var a=d(this).data("draggable").options;a._cursor&&d("body").css("cursor",a._cursor)}});d.ui.plugin.add("draggable","opacity",{start:function(a,b){a=d(b.helper);b=d(this).data("draggable").options;if(a.css("opacity"))b._opacity=
a.css("opacity");a.css("opacity",b.opacity)},stop:function(a,b){a=d(this).data("draggable").options;a._opacity&&d(b.helper).css("opacity",a._opacity)}});d.ui.plugin.add("draggable","scroll",{start:function(){var a=d(this).data("draggable");if(a.scrollParent[0]!=document&&a.scrollParent[0].tagName!="HTML")a.overflowOffset=a.scrollParent.offset()},drag:function(a){var b=d(this).data("draggable"),c=b.options,f=false;if(b.scrollParent[0]!=document&&b.scrollParent[0].tagName!="HTML"){if(!c.axis||c.axis!=
"x")if(b.overflowOffset.top+b.scrollParent[0].offsetHeight-a.pageY<c.scrollSensitivity)b.scrollParent[0].scrollTop=f=b.scrollParent[0].scrollTop+c.scrollSpeed;else if(a.pageY-b.overflowOffset.top<c.scrollSensitivity)b.scrollParent[0].scrollTop=f=b.scrollParent[0].scrollTop-c.scrollSpeed;if(!c.axis||c.axis!="y")if(b.overflowOffset.left+b.scrollParent[0].offsetWidth-a.pageX<c.scrollSensitivity)b.scrollParent[0].scrollLeft=f=b.scrollParent[0].scrollLeft+c.scrollSpeed;else if(a.pageX-b.overflowOffset.left<
c.scrollSensitivity)b.scrollParent[0].scrollLeft=f=b.scrollParent[0].scrollLeft-c.scrollSpeed}else{if(!c.axis||c.axis!="x")if(a.pageY-d(document).scrollTop()<c.scrollSensitivity)f=d(document).scrollTop(d(document).scrollTop()-c.scrollSpeed);else if(d(window).height()-(a.pageY-d(document).scrollTop())<c.scrollSensitivity)f=d(document).scrollTop(d(document).scrollTop()+c.scrollSpeed);if(!c.axis||c.axis!="y")if(a.pageX-d(document).scrollLeft()<c.scrollSensitivity)f=d(document).scrollLeft(d(document).scrollLeft()-
c.scrollSpeed);else if(d(window).width()-(a.pageX-d(document).scrollLeft())<c.scrollSensitivity)f=d(document).scrollLeft(d(document).scrollLeft()+c.scrollSpeed)}f!==false&&d.ui.ddmanager&&!c.dropBehaviour&&d.ui.ddmanager.prepareOffsets(b,a)}});d.ui.plugin.add("draggable","snap",{start:function(){var a=d(this).data("draggable"),b=a.options;a.snapElements=[];d(b.snap.constructor!=String?b.snap.items||":data(draggable)":b.snap).each(function(){var c=d(this),f=c.offset();this!=a.element[0]&&a.snapElements.push({item:this,
width:c.outerWidth(),height:c.outerHeight(),top:f.top,left:f.left})})},drag:function(a,b){for(var c=d(this).data("draggable"),f=c.options,e=f.snapTolerance,h=b.offset.left,g=h+c.helperProportions.width,n=b.offset.top,o=n+c.helperProportions.height,i=c.snapElements.length-1;i>=0;i--){var j=c.snapElements[i].left,l=j+c.snapElements[i].width,k=c.snapElements[i].top,m=k+c.snapElements[i].height;if(j-e<h&&h<l+e&&k-e<n&&n<m+e||j-e<h&&h<l+e&&k-e<o&&o<m+e||j-e<g&&g<l+e&&k-e<n&&n<m+e||j-e<g&&g<l+e&&k-e<o&&
o<m+e){if(f.snapMode!="inner"){var p=Math.abs(k-o)<=e,q=Math.abs(m-n)<=e,r=Math.abs(j-g)<=e,s=Math.abs(l-h)<=e;if(p)b.position.top=c._convertPositionTo("relative",{top:k-c.helperProportions.height,left:0}).top-c.margins.top;if(q)b.position.top=c._convertPositionTo("relative",{top:m,left:0}).top-c.margins.top;if(r)b.position.left=c._convertPositionTo("relative",{top:0,left:j-c.helperProportions.width}).left-c.margins.left;if(s)b.position.left=c._convertPositionTo("relative",{top:0,left:l}).left-c.margins.left}var t=
p||q||r||s;if(f.snapMode!="outer"){p=Math.abs(k-n)<=e;q=Math.abs(m-o)<=e;r=Math.abs(j-h)<=e;s=Math.abs(l-g)<=e;if(p)b.position.top=c._convertPositionTo("relative",{top:k,left:0}).top-c.margins.top;if(q)b.position.top=c._convertPositionTo("relative",{top:m-c.helperProportions.height,left:0}).top-c.margins.top;if(r)b.position.left=c._convertPositionTo("relative",{top:0,left:j}).left-c.margins.left;if(s)b.position.left=c._convertPositionTo("relative",{top:0,left:l-c.helperProportions.width}).left-c.margins.left}if(!c.snapElements[i].snapping&&
(p||q||r||s||t))c.options.snap.snap&&c.options.snap.snap.call(c.element,a,d.extend(c._uiHash(),{snapItem:c.snapElements[i].item}));c.snapElements[i].snapping=p||q||r||s||t}else{c.snapElements[i].snapping&&c.options.snap.release&&c.options.snap.release.call(c.element,a,d.extend(c._uiHash(),{snapItem:c.snapElements[i].item}));c.snapElements[i].snapping=false}}}});d.ui.plugin.add("draggable","stack",{start:function(){var a=d(this).data("draggable").options;a=d.makeArray(d(a.stack)).sort(function(c,f){return(parseInt(d(c).css("zIndex"),
10)||0)-(parseInt(d(f).css("zIndex"),10)||0)});if(a.length){var b=parseInt(a[0].style.zIndex)||0;d(a).each(function(c){this.style.zIndex=b+c});this[0].style.zIndex=b+a.length}}});d.ui.plugin.add("draggable","zIndex",{start:function(a,b){a=d(b.helper);b=d(this).data("draggable").options;if(a.css("zIndex"))b._zIndex=a.css("zIndex");a.css("zIndex",b.zIndex)},stop:function(a,b){a=d(this).data("draggable").options;a._zIndex&&d(b.helper).css("zIndex",a._zIndex)}})})(jQuery);
;
;/*
 * @name BeautyTips
 * @desc a tooltips/baloon-help plugin for jQuery
 *
 * @author Jeff Robbins - Lullabot - http://www.lullabot.com
 * @version 0.9.5-rc1  (5/20/2009)
 */
jQuery.bt = {
	version : "0.9.5-rc1"
};
(function($) {
	jQuery.fn.bt = function(content, options) {
		if (typeof content != "string") {
			var contentSelect = true;
			options = content;
			content = false;
		} else {
			var contentSelect = false;
		}
		if (jQuery.fn.hoverIntent && jQuery.bt.defaults.trigger == "hover") {
			jQuery.bt.defaults.trigger = "hoverIntent";
		}
		return this
				.each(function(index) {
					var opts = jQuery.extend(false, jQuery.bt.defaults,
							jQuery.bt.options, options);
					opts.spikeLength = numb(opts.spikeLength);
					opts.spikeGirth = numb(opts.spikeGirth);
					opts.overlap = numb(opts.overlap);
					var ajaxTimeout = false;
					if (opts.killTitle) {
						$(this).find("[title]").andSelf().each(
								function() {
									if (!$(this).attr("bt-xTitle")) {
										$(this).attr("bt-xTitle",
												$(this).attr("title")).attr(
												"title", "");
									}
								});
					}
					if (typeof opts.trigger == "string") {
						opts.trigger = [ opts.trigger ];
					}
					if (opts.trigger[0] == "hoverIntent") {
						var hoverOpts = jQuery.extend(opts.hoverIntentOpts, {
							over : function() {
								this.btOn();
							},
							out : function() {
								this.btOff();
							}
						});
						$(this).hoverIntent(hoverOpts);
					} else {
						if (opts.trigger[0] == "hover") {
							$(this).hover(function() {
								this.btOn();
							}, function() {
								this.btOff();
							});
						} else {
							if (opts.trigger[0] == "now") {
								if ($(this).hasClass("bt-active")) {
									this.btOff();
								} else {
									this.btOn();
								}
							} else {
								if (opts.trigger[0] == "none") {
								} else {
									if (opts.trigger.length > 1
											&& opts.trigger[0] != opts.trigger[1]) {
										$(this).bind(opts.trigger[0],
												function() {
													this.btOn();
												}).bind(opts.trigger[1],
												function() {
													this.btOff();
												});
									} else {
										$(this).bind(
												opts.trigger[0],
												function() {
													if ($(this).hasClass(
															"bt-active")) {
														this.btOff();
													} else {
														this.btOn();
													}
												});
									}
								}
							}
						}
					}
					this.btOn = function() {
						if (typeof $(this).data("bt-box") == "object") {
							this.btOff();
						}
						opts.preBuild.apply(this);
						$(jQuery.bt.vars.closeWhenOpenStack).btOff();
						$(this).addClass("bt-active " + opts.activeClass);
						if (contentSelect && opts.ajaxPath == null) {
							if (opts.killTitle) {
								$(this)
										.attr("title",
												$(this).attr("bt-xTitle"));
							}
							content = $.isFunction(opts.contentSelector) ? opts.contentSelector
									.apply(this)
									: eval(opts.contentSelector);
							if (opts.killTitle) {
								$(this).attr("title", "");
							}
						}
						if (opts.ajaxPath != null && content == false) {
							if (typeof opts.ajaxPath == "object") {
								var url = eval(opts.ajaxPath[0]);
								url += opts.ajaxPath[1] ? " "
										+ opts.ajaxPath[1] : "";
							} else {
								var url = opts.ajaxPath;
							}
							var off = url.indexOf(" ");
							if (off >= 0) {
								var selector = url.slice(off, url.length);
								url = url.slice(0, off);
							}
							var cacheData = opts.ajaxCache ? $(document.body)
									.data("btCache-" + url.replace(/\./g, ""))
									: null;
							if (typeof cacheData == "string") {
								content = selector ? $("<div/>")
										.append(
												cacheData
														.replace(
																/<script(.|\s)*?\/script>/g,
																"")).find(
												selector)
										: cacheData;
							} else {
								var target = this;
								var ajaxOpts = jQuery
										.extend(
												false,
												{
													type : opts.ajaxType,
													data : opts.ajaxData,
													cache : opts.ajaxCache,
													url : url,
													complete : function(
															XMLHttpRequest,
															textStatus) {
														if (textStatus == "success"
																|| textStatus == "notmodified") {
															if (opts.ajaxCache) {
																$(document.body)
																		.data(
																				"btCache-"
																						+ url
																								.replace(
																										/\./g,
																										""),
																				XMLHttpRequest.responseText);
															}
															ajaxTimeout = false;
															content = selector ? $(
																	"<div/>")
																	.append(
																			XMLHttpRequest.responseText
																					.replace(
																							/<script(.|\s)*?\/script>/g,
																							""))
																	.find(
																			selector)
																	: XMLHttpRequest.responseText;
														} else {
															if (textStatus == "timeout") {
																ajaxTimeout = true;
															}
															content = opts.ajaxError
																	.replace(
																			/%error/g,
																			XMLHttpRequest.statusText);
														}
														if ($(target).hasClass(
																"bt-active")) {
															target.btOn();
														}
													}
												}, opts.ajaxOpts);
								jQuery.ajax(ajaxOpts);
								content = opts.ajaxLoading;
							}
						}
						var shadowMarginX = 0;
						var shadowMarginY = 0;
						var shadowShiftX = 0;
						var shadowShiftY = 0;
						if (opts.shadow && !shadowSupport()) {
							opts.shadow = false;
							jQuery.extend(opts, opts.noShadowOpts);
						}
						if (opts.shadow) {
							if (opts.shadowBlur > Math.abs(opts.shadowOffsetX)) {
								shadowMarginX = opts.shadowBlur * 2;
							} else {
								shadowMarginX = opts.shadowBlur
										+ Math.abs(opts.shadowOffsetX);
							}
							shadowShiftX = (opts.shadowBlur - opts.shadowOffsetX) > 0 ? opts.shadowBlur
									- opts.shadowOffsetX
									: 0;
							if (opts.shadowBlur > Math.abs(opts.shadowOffsetY)) {
								shadowMarginY = opts.shadowBlur * 2;
							} else {
								shadowMarginY = opts.shadowBlur
										+ Math.abs(opts.shadowOffsetY);
							}
							shadowShiftY = (opts.shadowBlur - opts.shadowOffsetY) > 0 ? opts.shadowBlur
									- opts.shadowOffsetY
									: 0;
						}
						if (opts.offsetParent) {
							var offsetParent = $(opts.offsetParent);
							var offsetParentPos = offsetParent.offset();
							var pos = $(this).offset();
							var top = numb(pos.top) - numb(offsetParentPos.top)
									+ numb($(this).css("margin-top"))
									- shadowShiftY;
							var left = numb(pos.left)
									- numb(offsetParentPos.left)
									+ numb($(this).css("margin-left"))
									- shadowShiftX;
						} else {
							var offsetParent = ($(this).css("position") == "absolute") ? $(
									this).parents().eq(0).offsetParent()
									: $(this).offsetParent();
							var pos = $(this).btPosition();
							var top = numb(pos.top)
									+ numb($(this).css("margin-top"))
									- shadowShiftY;
							var left = numb(pos.left)
									+ numb($(this).css("margin-left"))
									- shadowShiftX;
						}
						var width = $(this).btOuterWidth();
						var height = $(this).outerHeight();
						if (typeof content == "object") {
							var original = content;
							var clone = $(original).clone(true).show();
							var origClones = $(original).data("bt-clones")
									|| [];
							origClones.push(clone);
							$(original).data("bt-clones", origClones);
							$(clone).data("bt-orig", original);
							$(this).data("bt-content-orig", {
								original : original,
								clone : clone
							});
							content = clone;
						}
						if (typeof content == "null" || content == "") {
							return;
						}
						var $text = $('<div class="bt-content"></div>').append(
								content).css({
							padding : opts.padding,
							position : "absolute",
							width : (opts.shrinkToFit ? "auto" : opts.width),
							zIndex : opts.textzIndex,
							left : shadowShiftX,
							top : shadowShiftY
						}).css(opts.cssStyles);
						var $box = $('<div class="bt-wrapper"></div>').append(
								$text).addClass(opts.cssClass).css({
							position : "absolute",
							width : opts.width,
							zIndex : opts.wrapperzIndex,
							visibility : "hidden"
						}).appendTo(offsetParent);
						if (jQuery.fn.bgiframe) {
							$text.bgiframe();
							$box.bgiframe();
						}
						$(this).data("bt-box", $box);
						var scrollTop = numb($(document).scrollTop());
						var scrollLeft = numb($(document).scrollLeft());
						var docWidth = numb($(window).width());
						var docHeight = numb($(window).height());
						var winRight = scrollLeft + docWidth;
						var winBottom = scrollTop + docHeight;
						var space = new Object();
						var thisOffset = $(this).offset();
						space.top = thisOffset.top - scrollTop;
						space.bottom = docHeight
								- ((thisOffset + height) - scrollTop);
						space.left = thisOffset.left - scrollLeft;
						space.right = docWidth
								- ((thisOffset.left + width) - scrollLeft);
						var textOutHeight = numb($text.outerHeight());
						var textOutWidth = numb($text.btOuterWidth());
						if (opts.positions.constructor == String) {
							opts.positions = opts.positions.replace(/ /, "")
									.split(",");
						}
						if (opts.positions[0] == "most") {
							var position = "top";
							for ( var pig in space) {
								position = space[pig] > space[position] ? pig
										: position;
							}
						} else {
							for ( var x in opts.positions) {
								var position = opts.positions[x];
								if ((position == "left" || position == "right")
										&& space[position] > textOutWidth
												+ opts.spikeLength) {
									break;
								} else {
									if ((position == "top" || position == "bottom")
											&& space[position] > textOutHeight
													+ opts.spikeLength) {
										break;
									}
								}
							}
						}
						var horiz = left + ((width - textOutWidth) * 0.5);
						var vert = top + ((height - textOutHeight) * 0.5);
						var points = new Array();
						var textTop, textLeft, textRight, textBottom, textTopSpace, textBottomSpace, textLeftSpace, textRightSpace, crossPoint, textCenter, spikePoint;
						switch (position) {
						case "top":
							$text.css("margin-bottom", opts.spikeLength + "px");
							$box.css({
								top : (top - $text.outerHeight(true))
										+ opts.overlap,
								left : horiz
							});
							textRightSpace = (winRight - opts.windowMargin)
									- ($text.offset().left + $text
											.btOuterWidth(true));
							var xShift = shadowShiftX;
							if (textRightSpace < 0) {
								$box
										.css(
												"left",
												(numb($box.css("left")) + textRightSpace)
														+ "px");
								xShift -= textRightSpace;
							}
							textLeftSpace = ($text.offset().left + numb($text
									.css("margin-left")))
									- (scrollLeft + opts.windowMargin);
							if (textLeftSpace < 0) {
								$box
										.css(
												"left",
												(numb($box.css("left")) - textLeftSpace)
														+ "px");
								xShift += textLeftSpace;
							}
							textTop = $text.btPosition().top
									+ numb($text.css("margin-top"));
							textLeft = $text.btPosition().left
									+ numb($text.css("margin-left"));
							textRight = textLeft + $text.btOuterWidth();
							textBottom = textTop + $text.outerHeight();
							textCenter = {
								x : textLeft
										+ ($text.btOuterWidth() * opts.centerPointX),
								y : textTop
										+ ($text.outerHeight() * opts.centerPointY)
							};
							points[points.length] = spikePoint = {
								y : textBottom + opts.spikeLength,
								x : ((textRight - textLeft) * 0.5) + xShift,
								type : "spike"
							};
							crossPoint = findIntersectX(spikePoint.x,
									spikePoint.y, textCenter.x, textCenter.y,
									textBottom);
							crossPoint.x = crossPoint.x < textLeft
									+ opts.spikeGirth / 2 + opts.cornerRadius ? textLeft
									+ opts.spikeGirth / 2 + opts.cornerRadius
									: crossPoint.x;
							crossPoint.x = crossPoint.x > (textRight - opts.spikeGirth / 2)
									- opts.cornerRadius ? (textRight - opts.spikeGirth / 2)
									- opts.CornerRadius
									: crossPoint.x;
							points[points.length] = {
								x : crossPoint.x - (opts.spikeGirth / 2),
								y : textBottom,
								type : "join"
							};
							points[points.length] = {
								x : textLeft,
								y : textBottom,
								type : "corner"
							};
							points[points.length] = {
								x : textLeft,
								y : textTop,
								type : "corner"
							};
							points[points.length] = {
								x : textRight,
								y : textTop,
								type : "corner"
							};
							points[points.length] = {
								x : textRight,
								y : textBottom,
								type : "corner"
							};
							points[points.length] = {
								x : crossPoint.x + (opts.spikeGirth / 2),
								y : textBottom,
								type : "join"
							};
							points[points.length] = spikePoint;
							break;
						case "left":
							$text.css("margin-right", opts.spikeLength + "px");
							$box
									.css({
										top : vert + "px",
										left : ((left - $text
												.btOuterWidth(true)) + opts.overlap)
												+ "px"
									});
							textBottomSpace = (winBottom - opts.windowMargin)
									- ($text.offset().top + $text
											.outerHeight(true));
							var yShift = shadowShiftY;
							if (textBottomSpace < 0) {
								$box
										.css(
												"top",
												(numb($box.css("top")) + textBottomSpace)
														+ "px");
								yShift -= textBottomSpace;
							}
							textTopSpace = ($text.offset().top + numb($text
									.css("margin-top")))
									- (scrollTop + opts.windowMargin);
							if (textTopSpace < 0) {
								$box.css("top",
										(numb($box.css("top")) - textTopSpace)
												+ "px");
								yShift += textTopSpace;
							}
							textTop = $text.btPosition().top
									+ numb($text.css("margin-top"));
							textLeft = $text.btPosition().left
									+ numb($text.css("margin-left"));
							textRight = textLeft + $text.btOuterWidth();
							textBottom = textTop + $text.outerHeight();
							textCenter = {
								x : textLeft
										+ ($text.btOuterWidth() * opts.centerPointX),
								y : textTop
										+ ($text.outerHeight() * opts.centerPointY)
							};
							points[points.length] = spikePoint = {
								x : textRight + opts.spikeLength,
								y : ((textBottom - textTop) * 0.5) + yShift,
								type : "spike"
							};
							crossPoint = findIntersectY(spikePoint.x,
									spikePoint.y, textCenter.x, textCenter.y,
									textRight);
							crossPoint.y = crossPoint.y < textTop
									+ opts.spikeGirth / 2 + opts.cornerRadius ? textTop
									+ opts.spikeGirth / 2 + opts.cornerRadius
									: crossPoint.y;
							crossPoint.y = crossPoint.y > (textBottom - opts.spikeGirth / 2)
									- opts.cornerRadius ? (textBottom - opts.spikeGirth / 2)
									- opts.cornerRadius
									: crossPoint.y;
							points[points.length] = {
								x : textRight,
								y : crossPoint.y + opts.spikeGirth / 2,
								type : "join"
							};
							points[points.length] = {
								x : textRight,
								y : textBottom,
								type : "corner"
							};
							points[points.length] = {
								x : textLeft,
								y : textBottom,
								type : "corner"
							};
							points[points.length] = {
								x : textLeft,
								y : textTop,
								type : "corner"
							};
							points[points.length] = {
								x : textRight,
								y : textTop,
								type : "corner"
							};
							points[points.length] = {
								x : textRight,
								y : crossPoint.y - opts.spikeGirth / 2,
								type : "join"
							};
							points[points.length] = spikePoint;
							break;
						case "bottom":
							$text.css("margin-top", opts.spikeLength + "px");
							$box.css({
								top : (top + height) - opts.overlap,
								left : horiz
							});
							textRightSpace = (winRight - opts.windowMargin)
									- ($text.offset().left + $text
											.btOuterWidth(true));
							var xShift = shadowShiftX;
							if (textRightSpace < 0) {
								$box
										.css(
												"left",
												(numb($box.css("left")) + textRightSpace)
														+ "px");
								xShift -= textRightSpace;
							}
							textLeftSpace = ($text.offset().left + numb($text
									.css("margin-left")))
									- (scrollLeft + opts.windowMargin);
							if (textLeftSpace < 0) {
								$box
										.css(
												"left",
												(numb($box.css("left")) - textLeftSpace)
														+ "px");
								xShift += textLeftSpace;
							}
							textTop = $text.btPosition().top
									+ numb($text.css("margin-top"));
							textLeft = $text.btPosition().left
									+ numb($text.css("margin-left"));
							textRight = textLeft + $text.btOuterWidth();
							textBottom = textTop + $text.outerHeight();
							textCenter = {
								x : textLeft
										+ ($text.btOuterWidth() * opts.centerPointX),
								y : textTop
										+ ($text.outerHeight() * opts.centerPointY)
							};
							points[points.length] = spikePoint = {
								x : ((textRight - textLeft) * 0.5) + xShift,
								y : shadowShiftY,
								type : "spike"
							};
							crossPoint = findIntersectX(spikePoint.x,
									spikePoint.y, textCenter.x, textCenter.y,
									textTop);
							crossPoint.x = crossPoint.x < textLeft
									+ opts.spikeGirth / 2 + opts.cornerRadius ? textLeft
									+ opts.spikeGirth / 2 + opts.cornerRadius
									: crossPoint.x;
							crossPoint.x = crossPoint.x > (textRight - opts.spikeGirth / 2)
									- opts.cornerRadius ? (textRight - opts.spikeGirth / 2)
									- opts.cornerRadius
									: crossPoint.x;
							points[points.length] = {
								x : crossPoint.x + opts.spikeGirth / 2,
								y : textTop,
								type : "join"
							};
							points[points.length] = {
								x : textRight,
								y : textTop,
								type : "corner"
							};
							points[points.length] = {
								x : textRight,
								y : textBottom,
								type : "corner"
							};
							points[points.length] = {
								x : textLeft,
								y : textBottom,
								type : "corner"
							};
							points[points.length] = {
								x : textLeft,
								y : textTop,
								type : "corner"
							};
							points[points.length] = {
								x : crossPoint.x - (opts.spikeGirth / 2),
								y : textTop,
								type : "join"
							};
							points[points.length] = spikePoint;
							break;
						case "right":
							$text.css("margin-left", (opts.spikeLength + "px"));
							$box.css({
								top : vert + "px",
								left : ((left + width) - opts.overlap) + "px"
							});
							textBottomSpace = (winBottom - opts.windowMargin)
									- ($text.offset().top + $text
											.outerHeight(true));
							var yShift = shadowShiftY;
							if (textBottomSpace < 0) {
								$box
										.css(
												"top",
												(numb($box.css("top")) + textBottomSpace)
														+ "px");
								yShift -= textBottomSpace;
							}
							textTopSpace = ($text.offset().top + numb($text
									.css("margin-top")))
									- (scrollTop + opts.windowMargin);
							if (textTopSpace < 0) {
								$box.css("top",
										(numb($box.css("top")) - textTopSpace)
												+ "px");
								yShift += textTopSpace;
							}
							textTop = $text.btPosition().top
									+ numb($text.css("margin-top"));
							textLeft = $text.btPosition().left
									+ numb($text.css("margin-left"));
							textRight = textLeft + $text.btOuterWidth();
							textBottom = textTop + $text.outerHeight();
							textCenter = {
								x : textLeft
										+ ($text.btOuterWidth() * opts.centerPointX),
								y : textTop
										+ ($text.outerHeight() * opts.centerPointY)
							};
							points[points.length] = spikePoint = {
								x : shadowShiftX,
								y : ((textBottom - textTop) * 0.5) + yShift,
								type : "spike"
							};
							crossPoint = findIntersectY(spikePoint.x,
									spikePoint.y, textCenter.x, textCenter.y,
									textLeft);
							crossPoint.y = crossPoint.y < textTop
									+ opts.spikeGirth / 2 + opts.cornerRadius ? textTop
									+ opts.spikeGirth / 2 + opts.cornerRadius
									: crossPoint.y;
							crossPoint.y = crossPoint.y > (textBottom - opts.spikeGirth / 2)
									- opts.cornerRadius ? (textBottom - opts.spikeGirth / 2)
									- opts.cornerRadius
									: crossPoint.y;
							points[points.length] = {
								x : textLeft,
								y : crossPoint.y - opts.spikeGirth / 2,
								type : "join"
							};
							points[points.length] = {
								x : textLeft,
								y : textTop,
								type : "corner"
							};
							points[points.length] = {
								x : textRight,
								y : textTop,
								type : "corner"
							};
							points[points.length] = {
								x : textRight,
								y : textBottom,
								type : "corner"
							};
							points[points.length] = {
								x : textLeft,
								y : textBottom,
								type : "corner"
							};
							points[points.length] = {
								x : textLeft,
								y : crossPoint.y + opts.spikeGirth / 2,
								type : "join"
							};
							points[points.length] = spikePoint;
							break;
						}
						var canvas = document.createElement("canvas");
						$(canvas)
								.attr(
										"width",
										(numb($text.btOuterWidth(true))
												+ opts.strokeWidth * 2 + shadowMarginX))
								.attr(
										"height",
										(numb($text.outerHeight(true))
												+ opts.strokeWidth * 2 + shadowMarginY))
								.appendTo($box).css({
									position : "absolute",
									zIndex : opts.boxzIndex
								});
						if (typeof G_vmlCanvasManager != "undefined") {
							canvas = G_vmlCanvasManager.initElement(canvas);
						}
						if (opts.cornerRadius > 0) {
							var newPoints = new Array();
							var newPoint;
							for ( var i = 0; i < points.length; i++) {
								if (points[i].type == "corner") {
									newPoint = betweenPoint(points[i],
											points[(i - 1) % points.length],
											opts.cornerRadius);
									newPoint.type = "arcStart";
									newPoints[newPoints.length] = newPoint;
									newPoints[newPoints.length] = points[i];
									newPoint = betweenPoint(points[i],
											points[(i + 1) % points.length],
											opts.cornerRadius);
									newPoint.type = "arcEnd";
									newPoints[newPoints.length] = newPoint;
								} else {
									newPoints[newPoints.length] = points[i];
								}
							}
							points = newPoints;
						}
						var ctx = canvas.getContext("2d");
						if (opts.shadow && opts.shadowOverlap !== true) {
							var shadowOverlap = numb(opts.shadowOverlap);
							switch (position) {
							case "top":
								if (opts.shadowOffsetX + opts.shadowBlur
										- shadowOverlap > 0) {
									$box
											.css(
													"top",
													(numb($box.css("top")) - (opts.shadowOffsetX
															+ opts.shadowBlur - shadowOverlap)));
								}
								break;
							case "right":
								if (shadowShiftX - shadowOverlap > 0) {
									$box.css("left", (numb($box.css("left"))
											+ shadowShiftX - shadowOverlap));
								}
								break;
							case "bottom":
								if (shadowShiftY - shadowOverlap > 0) {
									$box.css("top", (numb($box.css("top"))
											+ shadowShiftY - shadowOverlap));
								}
								break;
							case "left":
								if (opts.shadowOffsetY + opts.shadowBlur
										- shadowOverlap > 0) {
									$box
											.css(
													"left",
													(numb($box.css("left")) - (opts.shadowOffsetY
															+ opts.shadowBlur - shadowOverlap)));
								}
								break;
							}
						}
						drawIt.apply(ctx, [ points ], opts.strokeWidth);
						ctx.fillStyle = opts.fill;
						if (opts.shadow) {
							ctx.shadowOffsetX = opts.shadowOffsetX;
							ctx.shadowOffsetY = opts.shadowOffsetY;
							ctx.shadowBlur = opts.shadowBlur;
							ctx.shadowColor = opts.shadowColor;
						}
						ctx.closePath();
						ctx.fill();
						if (opts.strokeWidth > 0) {
							ctx.shadowColor = "rgba(0, 0, 0, 0)";
							ctx.lineWidth = opts.strokeWidth;
							ctx.strokeStyle = opts.strokeStyle;
							ctx.beginPath();
							drawIt.apply(ctx, [ points ], opts.strokeWidth);
							ctx.closePath();
							ctx.stroke();
						}
						opts.preShow.apply(this, [ $box[0] ]);
						$box.css({
							display : "none",
							visibility : "visible"
						});
						opts.showTip.apply(this, [ $box[0] ]);
						if (opts.overlay) {
							var overlay = $('<div class="bt-overlay"></div>')
									.css({
										position : "absolute",
										backgroundColor : "blue",
										top : top,
										left : left,
										width : width,
										height : height,
										opacity : ".2"
									}).appendTo(offsetParent);
							$(this).data("overlay", overlay);
						}
						
						//这个地方有bug,就算是用ajax加载也不应该缓存在一个content变量内,导致总是加载一样的数据 
						/*
						if ((opts.ajaxPath != null && opts.ajaxCache == false)
								|| ajaxTimeout) {
							content = false;
						}
						*/
						if (opts.ajaxPath != null || ajaxTimeout) {
							content = false;
						}
						if (opts.clickAnywhereToClose) {
							jQuery.bt.vars.clickAnywhereStack.push(this);
							$(document).click(jQuery.bt.docClick);
						}
						if (opts.closeWhenOthersOpen) {
							jQuery.bt.vars.closeWhenOpenStack.push(this);
						}
						opts.postShow.apply(this, [ $box[0] ]);
					};
					this.btOff = function() {
						var box = $(this).data("bt-box");
						opts.preHide.apply(this, [ box ]);
						var i = this;
						i.btCleanup = function() {
							var box = $(i).data("bt-box");
							var contentOrig = $(i).data("bt-content-orig");
							var overlay = $(i).data("bt-overlay");
							if (typeof box == "object") {
								$(box).remove();
								$(i).removeData("bt-box");
							}
							if (typeof contentOrig == "object") {
								var clones = $(contentOrig.original).data(
										"bt-clones");
								$(contentOrig).data("bt-clones",
										arrayRemove(clones, contentOrig.clone));
							}
							if (typeof overlay == "object") {
								$(overlay).remove();
								$(i).removeData("bt-overlay");
							}
							jQuery.bt.vars.clickAnywhereStack = arrayRemove(
									jQuery.bt.vars.clickAnywhereStack, i);
							jQuery.bt.vars.closeWhenOpenStack = arrayRemove(
									jQuery.bt.vars.closeWhenOpenStack, i);
							$(i).removeClass("bt-active " + opts.activeClass);
							opts.postHide.apply(i);
						};
						opts.hideTip.apply(this, [ box, i.btCleanup ]);
					};
					var refresh = this.btRefresh = function() {
						this.btOff();
						this.btOn();
					};
				});
		function drawIt(points, strokeWidth) {
			this.moveTo(points[0].x, points[0].y);
			for (i = 1; i < points.length; i++) {
				if (points[i - 1].type == "arcStart") {
					this.quadraticCurveTo(round5(points[i].x, strokeWidth),
							round5(points[i].y, strokeWidth), round5(
									points[(i + 1) % points.length].x,
									strokeWidth), round5(points[(i + 1)
									% points.length].y, strokeWidth));
					i++;
				} else {
					this.lineTo(round5(points[i].x, strokeWidth), round5(
							points[i].y, strokeWidth));
				}
			}
		}
		function round5(num, strokeWidth) {
			var ret;
			strokeWidth = numb(strokeWidth);
			if (strokeWidth % 2) {
				ret = num;
			} else {
				ret = Math.round(num - 0.5) + 0.5;
			}
			return ret;
		}
		function numb(num) {
			return parseInt(num) || 0;
		}
		function arrayRemove(arr, elem) {
			var x, newArr = new Array();
			for (x in arr) {
				if (arr[x] != elem) {
					newArr.push(arr[x]);
				}
			}
			return newArr;
		}
		function canvasSupport() {
			var canvas_compatible = false;
			try {
				canvas_compatible = !!(document.createElement("canvas")
						.getContext("2d"));
			} catch (e) {
				canvas_compatible = !!(document.createElement("canvas").getContext);
			}
			return canvas_compatible;
		}
		function shadowSupport() {
			try {
				var userAgent = navigator.userAgent.toLowerCase();
				if (/webkit/.test(userAgent)) {
					return true;
				} else {
					if (/gecko|mozilla/.test(userAgent)
							&& parseFloat(userAgent
									.match(/firefox\/(\d+(?:\.\d+)+)/)[1]) >= 3.1) {
						return true;
					}
				}
			} catch (err) {
			}
			return false;
		}
		function betweenPoint(point1, point2, dist) {
			var y, x;
			if (point1.x == point2.x) {
				y = point1.y < point2.y ? point1.y + dist : point1.y - dist;
				return {
					x : point1.x,
					y : y
				};
			} else {
				if (point1.y == point2.y) {
					x = point1.x < point2.x ? point1.x + dist : point1.x - dist;
					return {
						x : x,
						y : point1.y
					};
				}
			}
		}
		function centerPoint(arcStart, corner, arcEnd) {
			var x = corner.x == arcStart.x ? arcEnd.x : arcStart.x;
			var y = corner.y == arcStart.y ? arcEnd.y : arcStart.y;
			var startAngle, endAngle;
			if (arcStart.x < arcEnd.x) {
				if (arcStart.y > arcEnd.y) {
					startAngle = (Math.PI / 180) * 180;
					endAngle = (Math.PI / 180) * 90;
				} else {
					startAngle = (Math.PI / 180) * 90;
					endAngle = 0;
				}
			} else {
				if (arcStart.y > arcEnd.y) {
					startAngle = (Math.PI / 180) * 270;
					endAngle = (Math.PI / 180) * 180;
				} else {
					startAngle = 0;
					endAngle = (Math.PI / 180) * 270;
				}
			}
			return {
				x : x,
				y : y,
				type : "center",
				startAngle : startAngle,
				endAngle : endAngle
			};
		}
		function findIntersect(r1x1, r1y1, r1x2, r1y2, r2x1, r2y1, r2x2, r2y2) {
			if (r2x1 == r2x2) {
				return findIntersectY(r1x1, r1y1, r1x2, r1y2, r2x1);
			}
			if (r2y1 == r2y2) {
				return findIntersectX(r1x1, r1y1, r1x2, r1y2, r2y1);
			}
			var r1m = (r1y1 - r1y2) / (r1x1 - r1x2);
			var r1b = r1y1 - (r1m * r1x1);
			var r2m = (r2y1 - r2y2) / (r2x1 - r2x2);
			var r2b = r2y1 - (r2m * r2x1);
			var x = (r2b - r1b) / (r1m - r2m);
			var y = r1m * x + r1b;
			return {
				x : x,
				y : y
			};
		}
		function findIntersectY(r1x1, r1y1, r1x2, r1y2, x) {
			if (r1y1 == r1y2) {
				return {
					x : x,
					y : r1y1
				};
			}
			var r1m = (r1y1 - r1y2) / (r1x1 - r1x2);
			var r1b = r1y1 - (r1m * r1x1);
			var y = r1m * x + r1b;
			return {
				x : x,
				y : y
			};
		}
		function findIntersectX(r1x1, r1y1, r1x2, r1y2, y) {
			if (r1x1 == r1x2) {
				return {
					x : r1x1,
					y : y
				};
			}
			var r1m = (r1y1 - r1y2) / (r1x1 - r1x2);
			var r1b = r1y1 - (r1m * r1x1);
			var x = (y - r1b) / r1m;
			return {
				x : x,
				y : y
			};
		}
	};
	jQuery.fn.btPosition = function() {
		function num(elem, prop) {
			return elem[0] && parseInt(jQuery.curCSS(elem[0], prop, true), 10)
					|| 0;
		}
		var left = 0, top = 0, results;
		if (this[0]) {
			var offsetParent = this.offsetParent(), offset = this.offset(), parentOffset = /^body|html$/i
					.test(offsetParent[0].tagName) ? {
				top : 0,
				left : 0
			} : offsetParent.offset();
			offset.top -= num(this, "marginTop");
			offset.left -= num(this, "marginLeft");
			parentOffset.top += num(offsetParent, "borderTopWidth");
			parentOffset.left += num(offsetParent, "borderLeftWidth");
			results = {
				top : offset.top - parentOffset.top,
				left : offset.left - parentOffset.left
			};
		}
		return results;
	};
	jQuery.fn.btOuterWidth = function(margin) {
		function num(elem, prop) {
			return elem[0] && parseInt(jQuery.curCSS(elem[0], prop, true), 10)
					|| 0;
		}
		return this["innerWidth"]()
				+ num(this, "borderLeftWidth")
				+ num(this, "borderRightWidth")
				+ (margin ? num(this, "marginLeft") + num(this, "marginRight")
						: 0);
	};
	jQuery.fn.btOn = function() {
		return this.each(function(index) {
			if (jQuery.isFunction(this.btOn)) {
				this.btOn();
			}
		});
	};
	jQuery.fn.btOff = function() {
		return this.each(function(index) {
			if (jQuery.isFunction(this.btOff)) {
				this.btOff();
			}
		});
	};
	jQuery.bt.vars = {
		clickAnywhereStack : [],
		closeWhenOpenStack : []
	};
	jQuery.bt.docClick = function(e) {
		if (!e) {
			var e = window.event;
		}
		if (!$(e.target).parents().andSelf().filter(".bt-wrapper, .bt-active").length
				&& jQuery.bt.vars.clickAnywhereStack.length) {
			$(jQuery.bt.vars.clickAnywhereStack).btOff();
			$(document).unbind("click", jQuery.bt.docClick);
		}
	};
	jQuery.bt.defaults = {
		trigger : "hover",
		clickAnywhereToClose : true,
		closeWhenOthersOpen : false,
		shrinkToFit : false,
		width : "200px",
		padding : "10px",
		spikeGirth : 10,
		spikeLength : 15,
		overlap : 0,
		overlay : false,
		killTitle : true,
		textzIndex : 9999,
		boxzIndex : 9998,
		wrapperzIndex : 9997,
		offsetParent : null,
		positions : [ "most" ],
		fill : "rgb(255, 255, 102)",
		windowMargin : 10,
		strokeWidth : 1,
		strokeStyle : "#000",
		cornerRadius : 5,
		centerPointX : 0.5,
		centerPointY : 0.5,
		shadow : false,
		shadowOffsetX : 2,
		shadowOffsetY : 2,
		shadowBlur : 3,
		shadowColor : "#000",
		shadowOverlap : false,
		noShadowOpts : {
			strokeStyle : "#999"
		},
		cssClass : "",
		cssStyles : {},
		activeClass : "bt-active",
		contentSelector : "$(this).attr('title')",
		ajaxPath : null,
		ajaxError : "<strong>ERROR:</strong> <em>%error</em>",
		ajaxLoading : "<blink>加载中...</blink>",
		ajaxData : {},
		ajaxType : "GET",
		ajaxCache : true,
		ajaxOpts : {},
		preBuild : function() {
		},
		preShow : function(box) {
		},
		showTip : function(box) {
			$(box).show();
		},
		postShow : function(box) {
		},
		preHide : function(box) {
		},
		hideTip : function(box, callback) {
			$(box).hide();
			callback();
		},
		postHide : function() {
		},
		hoverIntentOpts : {
			interval : 300,
			timeout : 500
		}
	};
	jQuery.bt.options = {};
})(jQuery);